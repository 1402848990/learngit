一、初始化
  1.git init  --将当前目录初始化为空白仓库
  2.git config --global user.name '王锐'  --设置git用户名
  3.git config --global user.email '14@qq.com'  --设置git邮箱
  4.ls -ah  --可以看到隐藏的.git文件

二、添加提交与推送
  1.git add readme.txt  --把文件添加到暂存区
  2.git commit -m '提交的内容'  --把文件提交到本地仓库当前分支
  3.git push  --推送到远程仓库
  4.git status  --查看有变动的文件
  5.git diff  --查看变动详情

三、版本穿梭
  1.git reset --hard HEAD^  --move to 上一次提交的版本
  2.git reset --hard <commit id>  --move to 某一次提交的版本
  3.git log   --可以查看提交历史记录
  4.git log --pretty=oneline  --查看提交历史记录的简洁版
  5.git reflog  --会显示每次命令的commit id,可以在回退版本后想回来的时候查看提交id

四、撤销修改
  1.git checkout -- readme.txt  --撤销对readme文件的修改，标准是根据上一次add或者commit

五、删除文件
  1.rm test.txt   --本地删除文件
  2.git rm test.txt   --在本地git仓库中删除test文件，删除后要commit提交

六、创建远程仓库并建立关联
  1.ssh-keygen -t rsa -C "youremail@example.com"  --创建公私秘钥
  2.git remote add origin git@github.com:1402848990/learn --与远程仓库建立连接
  3.git push -u origin master --第一次推送master分支的所有内容

七、创建新的分支
  1.git branch dev  --创建dev分支
  2.git checkout -b dev  --创建并切换到dev分支
  3.git branch  --查看所有分支
  4.git branch -d dev   --删除dev分支
  5.git switch dev  --和git checkout dev同样是切换分支，但是更科学

八、删除分支
  1.git push origin -d code01  --删除远程分支
  2.git branch -d code01  --删除本地分支

九、标签tag
  1.git tag v1.1 [commitId]  --创建标签
  2.git tag -a v1.1 -m '标签说明' commitId  --创建一个有说明的指定提交的标签
  3.git show v1.1   --查看v1.1标签的内容
  4.git show tag  --查看所有标签
  5.git tag -d v1.1   --删除本地标签
  6.git push origin :refs/tags/v1.1   --删除远程标签
  7.git puh origin v1.0   --本地标签推送到远程 --tags(所有的本地标签)
